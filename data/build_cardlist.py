


import codecs
import glob
import os


def getChronologicalFilenames(set_types):
  # Construct map from base filename to filename for chronological ordering
  fmap = {}
  for filename in glob.glob("*/*.txt"):
    (set_type, fname) = filename.split(os.path.sep)
    if set_type not in set_types:
      continue

    fmap[fname] = filename

  print "Read %d files" % len(fmap)

  for _, fname in sorted(fmap.iteritems()):
    yield fname


if __name__ == "__main__":
  # Populate cardMap[cardName]->["$set_code-$rarity"]
  set_map = {}
  formats = {
      "Eternal": [],
      "Modern": [],
  }  # Dict from format name to list of expansions
  card_map = {}
  for fname in getChronologicalFilenames(["expansion", "core", "supplemental", "compilation"]):
    (set_type, basename) = fname.split(os.path.sep)
    (year, month, set_code) = os.path.splitext(basename.upper())[0].split("-")
    if set_type not in set_map:
      set_map[set_type] = []
    set_map[set_type].append(set_code)

    formats["Eternal"].append(set_code)
    if ("%s-%s" % (year, month) >= "2003-07") and set_type in ["expansion", "core"]:
      formats["Modern"].append(set_code)
    
    with codecs.open(fname,'r',encoding='utf8') as f:
      for line in f.readlines():
        (name, rarity) = line.strip().split("|")
        if name not in card_map:
          card_map[name] = []
        card_map[name].append("%s-%s" % (set_code, rarity))
  

  # Write setlist
  setlist = "setlist.txt"
  with codecs.open(setlist, "w", encoding='utf-8') as f:
    f.write("# GENERATED BY build_cardlist.py; DO NOT EDIT\r\n")
    for set_type, sets in sorted(set_map.iteritems()):
      f.write("%s\r\n" % "|".join([set_type] + sets))  # \r\n for windows
    
  print "Wrote %d set types to %s" % (len(set_map), setlist)

  # Write cardlist
  cardlist = "cardlist.txt"
  with codecs.open(cardlist, "w", encoding='utf-8') as f:
    f.write("# GENERATED BY build_cardlist.py; DO NOT EDIT\r\n")
    for name, sets in sorted(card_map.iteritems()):
      f.write("%s\r\n" % "|".join([name] + sets))  # \r\n for windows

  print "Wrote %d unique cards to %s" % (len(card_map), cardlist)

  # Write formats.txt
  formatlist = "formats.txt"
  with codecs.open(formatlist, "w", encoding='utf-8') as f:
    f.write("# GENERATED BY build_cardlist.py; DO NOT EDIT\r\n")
    f.write("# This file contains sets that dictate legality, not just sets " +
      "that are legal.  E.g. some cards in EMA might be modern-legal but EMA " +
      "EMA is not listed in Modern.\r\n")
    for fmt, sets in sorted(formats.iteritems()):
      f.write("%s\r\n" % "|".join([fmt] + sets))  # \r\n for windows

  print "Wrote %d formats to %s" % (len(formats), formatlist)
